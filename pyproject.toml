[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name="pypsa"
dynamic = ["version"]
description="Python for Power Systems Analysis"
readme="README.md"
authors=[{name = "PyPSA Developers, see https://pypsa.readthedocs.io/en/latest/developers.html", email = "t.brown@tu-berlin.de"}]
license = { file = "LICENSE" }
classifiers=[
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Typing :: Typed",
    "Operating System :: OS Independent",
]

requires-python = ">=3.9"

dependencies = [
    "numpy",
    "scipy",
    "pandas>=0.24",
    "xarray",
    "netcdf4",
    "linopy>=0.4",
    "matplotlib",
    "geopandas>=0.9",
    "networkx>=2",
    "deprecation",
    "validators",
    "highspy",
]

[project.urls]
Homepage = "https://github.com/PyPSA/PyPSA"
Source = "https://github.com/PyPSA/PyPSA"

[project.optional-dependencies]
hdf5 = ["tables"]
cartopy = [
    "cartopy>=0.16",
    "requests",
]
gurobipy = ["gurobipy"]
cloudpath = ["cloudpathlib[all]"]
dev = [
    "pytest", 
    "coverage",
    "pypower",
    "pandapower>=2.14.9",
    "scikit-learn",
    "pre-commit", 
    "ruff",
    "mypy"
]
docs = [
    "numpydoc==1.8.0",
    "sphinx==8.0.2",
    "sphinx-book-theme==1.1.3",
    "pydata-sphinx-theme==0.15.4",
    "sphinx-reredirects==0.1.5",
    "nbsphinx==0.9.5",
    "nbsphinx-link==1.3.0",
    "scikit-learn==1.5.1",
    "docutils==0.20.0", # Just temporarily until nbsphinx-link is updated (see https://github.com/vidartf/nbsphinx-link/issues/22)
    "ipython==8.26.0",
    "ipykernel==6.29.5",
]

# setuptools_scm settings
 
[tool.setuptools_scm]
version_scheme = "no-guess-dev"

[tool.setuptools.packages.find]
include = ["pypsa"]

[tool.setuptools.package-data]
"pypsa" = ["py.typed"]

# Pytest settings

[tool.pytest.ini_options]   
filterwarnings = [
    "error::DeprecationWarning", # Raise all DeprecationWarnings as errors
    "error::FutureWarning",      # Raise all FutureWarnings as errors
]

# Coverage settings

[tool.coverage.run]
branch = true
source = ["pypsa"]
omit = ["test/*"]
[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
]

# Static type checker settings

[tool.mypy]
exclude = ['dev/*', 'examples/*', 'doc/*']
ignore_missing_imports = true
no_implicit_optional = true
warn_unused_ignores = true
show_error_code_links = true
# Maybe activate at later stage
# disallow_any_generics = true 
# warn_return_any = true

[[tool.mypy.overrides]]
module = "pypsa.*"
disallow_untyped_defs = true
check_untyped_defs = true

# Formatter and linter settings

[tool.ruff]
extend-include = ['*.ipynb']

[tool.ruff.lint]
select = [
    'F',   # pyflakes
    'E',   # pycodestyle: Error
    'W',   # pycodestyle: Warning
    'I',   # isort
    'D',   # pydocstyle
    'UP',  # pyupgrade
    'ANN', # flake-8 annotations
    'TID', # flake8-tidy-imports
    'NPY', # numpy
    'RUF013', # ruff
]

ignore = [
    'ANN401', # Dynamically typed expressions are forbidden
    'E741', # ambiguous variable names
    'D203', # 1 blank line required before class docstring
    'D212', # Multi-line docstring summary should start at the second line
    'D401', # First line should be in imperative mood
    ]


[tool.ruff.lint.per-file-ignores]
# pydocstyle ignores, which could be enabled in future when existing
# issues are fixed
"!**/{grouping.py}" = [
    'E501', # line too long
    'D100', # Missing docstring in public module
    'D101', # Missing docstring in public class
    'D102', # Missing docstring in public method
    'D103', # Missing docstring in public function
    'D105', # Missing docstring in magic method
    'D107', # Missing docstring in __init__
    'D200', # One-line docstring should fit on one line with quotes
    'D202', # No blank lines allowed after function docstring
    'D205', # 1 blank line required between summary line and description
    'D400', # First line should end with a period
    'D404', # First word of the docstring should not be "This
    'D413', # Missing blank line after last section
    'D415', # First line should end with a period, question mark, or exclamation point
    'D417', # Missing argument descriptions in the docstring
    # Include once available
    # https://github.com/astral-sh/ruff/issues/2310
    ]

"{test,examples}/**"=[
    'ANN' # flake8-annotations
]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"
