name: Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: ['*']
  schedule:
  - cron: "0 5 * * *"

# Cancel any in-progress runs when a new run is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    # Build the Python SDist and wheel, performs metadata and readme linting
    name: Build and verify package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0   # Needed for setuptools_scm
    - uses: hynek/build-and-inspect-python-package@v2
      id: baipp

    outputs:
      python-versions: ${{ steps.baipp.outputs.supported_python_classifiers_json_array }}

  test:
    # Test package build in matrix of OS and Python versions
    name: Test package
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(needs.build.outputs.python-versions) }}
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
    env:
      MPLBACKEND: Agg  # https://github.com/orgs/community/discussions/26434
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for setuptools_scm

    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install macos dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        # pkg-config is deprecated but still installed in runner
        # Can be removed once it is removed from the runner
        brew unlink pkg-config@0.29.2 || true
        brew install hdf5

    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: Packages
        path: dist

    - name: Install package and dependencies
      run: |
        python -m pip install uv
        uv pip install --compile --system "$(ls dist/*.whl)[dev]"
        # Use --compile to get pip's behavior. Otherwise the pandapower installation 
        # will be broken on python<3.12
        # See https://github.com/astral-sh/uv/issues/1928#issuecomment-1968857514

    - name: Test with pytest
      run: |
        coverage run -m pytest
        coverage xml

    - name: Upload code coverage report
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  test-docs-build:
    name: Test docs build # Also tests example notebooks (similar to nbmake)
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for setuptools_scm

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: Packages
        path: dist

    - name: Install package and dependencies
      run: |
        python -m pip install uv
        uv pip install --system nbmake requests
        uv pip install --system "$(ls dist/*.whl)[dev, cartopy, docs]"

    - name: Test docs build
      run: |
        sudo apt-get install -y pandoc
        pytest test/test_docs.py --test-docs

  check-types:
    name: Check types
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for setuptools_scm

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: Packages
        path: dist

    - name: Install package and dependencies
      run: |
        python -m pip install uv
        uv pip install --system nbmake requests
        uv pip install --system "$(ls dist/*.whl)[dev]"

        # TODO: Remove once types in linopy are resolved
        uv pip install --system linopy==0.3.14 --reinstall

    - name: Run type checker (mypy)
      run: |
        mypy .
